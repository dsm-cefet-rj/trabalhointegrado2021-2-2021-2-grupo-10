{
	"parser": "@babel/eslint-parser",
	"extends": [
		"plugin:import/recommended", 
		"airbnb-base", 
		"plugin:prettier/recommended", 
		"plugin:react/recommended",
		"plugin:jsx-a11y/recommended",
		"plugin:react-hooks/recommended"
	],
	"plugins": [
		"import", 
		"react",
		"jsx-a11y"
	],
	"settings": {
		"react": {
		  "version": "detect"
		}
	},
	"env": {
		"es6": true,
		"node": true,
		"jest": true,
		"browser": true
	},
	"parserOptions": {
		"ecmaVersion": 2021
	},
	"rules": {
		"react/prop-types": "off",
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"react/self-closing-comp": "warn",
		"consistent-return": "off",
		"no-console": "off",
		"no-plusplus": "off",
		"no-continue": "off",
		"no-param-reassign": "off",
		"no-underscore-dangle": "off",
		"no-await-in-loop": "off",
		"no-shadow": "off",
		"no-shadow-restricted-names": "error",
		"no-use-before-define": ["error", { "functions": false }],
		"no-restricted-syntax": [
			"error",
			{
				"selector": "ForInStatement",
				"message":
					"for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
			},
			{
				"selector": "LabeledStatement",
				"message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
			},
			{
				"selector": "WithStatement",
				"message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
			}
		],
		"import/prefer-default-export": "off",
		"lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
		"import/no-extraneous-dependencies": [
			"error",
			{ "devDependencies": ["mapCoverage.{js,ts}", "{test,tests,__tests__}/**/*.{js,ts}"] }
		]
	}
}